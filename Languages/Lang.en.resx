<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="homeBtn" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="windowsBtn" xml:space="preserve">
    <value>Windows</value>
  </data>
  <data name="officeBtn" xml:space="preserve">
    <value>Office</value>
  </data>
  <data name="optionsBtn" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="productsLbl" xml:space="preserve">
    <value>Product</value>
  </data>
  <data name="licensesLbl" xml:space="preserve">
    <value>Licenses</value>
  </data>
  <data name="kmsLbl" xml:space="preserve">
    <value>KMS Servers</value>
  </data>
  <data name="productsDrop" xml:space="preserve">
    <value>Select your Windows Edition</value>
  </data>
  <data name="licencesText" xml:space="preserve">
    <value>Select your License</value>
  </data>
  <data name="serversDrop" xml:space="preserve">
    <value>Select your KMS Server</value>
  </data>
  <data name="orgLbl" xml:space="preserve">
    <value>Organization: </value>
  </data>
  <data name="ownerLbl" xml:space="preserve">
    <value>User: </value>
  </data>
  <data name="activateBtn" xml:space="preserve">
    <value>Activate!</value>
  </data>
  <data name="infoBtn" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="removeBtn" xml:space="preserve">
    <value>Remove Key</value>
  </data>
  <data name="officeDrop" xml:space="preserve">
    <value>Select your Office version</value>
  </data>
  <data name="noteLbl" xml:space="preserve">
    <value>*Note: The license expires in 180 days and is automatically renewed 7 days later, in the rare case If it
doesn't, press the RENEW button.</value>
  </data>
  <data name="verLbl" xml:space="preserve">
    <value>Version: </value>
  </data>
  <data name="updatesOnLblOffice" xml:space="preserve">
    <value>Updates: Enabled</value>
  </data>
  <data name="renewBtn" xml:space="preserve">
    <value>Renew</value>
  </data>
  <data name="removeAllBtn" xml:space="preserve">
    <value>Remove All</value>
  </data>
  <data name="langLbl" xml:space="preserve">
    <value>Change Language</value>
  </data>
  <data name="updatesLbl" xml:space="preserve">
    <value>Updates</value>
  </data>
  <data name="updatesBtn" xml:space="preserve">
    <value>Check Updates</value>
  </data>
  <data name="contactLbl" xml:space="preserve">
    <value>Contact and Help</value>
  </data>
  <data name="aboutLbl" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="titleLbl2" xml:space="preserve">
    <value>How does it work?</value>
  </data>
  <data name="textLbl1" xml:space="preserve">
    <value>FuryKMS is a GUI (graphical user interface) that makes it easy to activate Microsoft Windows 10 - 11 and 
Office 2013 - 2021</value>
  </data>
  <data name="textLbl2" xml:space="preserve">
    <value>Windows activation is done with the SLMGR commands and generic licenses.
Activation of the Office suite is done with The Office Software Protection Platform script (ospp.vbs) and
generic licenses.
All of this is validated on the MS Guides KMS servers and therefore these servers ARE NOT OFFICIAL, however
the security of your computer will not be compromised.</value>
  </data>
  <data name="titleLbl3" xml:space="preserve">
    <value>Is FuryKMS a Hacktool:Win32/Keygen?</value>
  </data>
  <data name="textLbl3" xml:space="preserve">
    <value>No, FuryKMS does not contain any malicious code that could compromise the integrity of your computer,
you can even check the source code to verify it.
In the rare case that your antivirus detects it as one, disable it momentarily to use it without problems.</value>
  </data>
  <data name="updatesOffLblOffice" xml:space="preserve">
    <value>Updates: Disabled</value>
  </data>
  <data name="titleLbl1" xml:space="preserve">
    <value>What is FuryKMS?</value>
  </data>
  <data name="removingTRIAL" xml:space="preserve">
    <value>Removing TRIAL Licenses...</value>
  </data>
  <data name="removingGeneric" xml:space="preserve">
    <value>Removing GENERIC Licenses...</value>
  </data>
  <data name="infoLbl" xml:space="preserve">
    <value>I’m always aware of the MS Guides servers and will be
updating them as they open and close respectively.
It’s recommended to use the servers marked as UNSTABLE 
as the last option, since these servers are unstable; if these are
no longer operational, I’ll remove them permanently and record
them in this program's documentation as a history.</value>
  </data>
  <data name="osLbl1" xml:space="preserve">
    <value>We have detected that you are using </value>
  </data>
  <data name="osLbl2" xml:space="preserve">
    <value>, you will still be able to use FuryKMS but with limited features.</value>
  </data>
  <data name="warningText" xml:space="preserve">
    <value>Warning</value>
  </data>
</root>